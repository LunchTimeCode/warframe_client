/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConclaveCategories {
    #[serde(rename = "PVPChallengeTypeCategory_DAILY_ROOT")]
    pub pvp_challenge_type_category_daily_root: Box<models::ConclaveModesPvpmodeAll>,
    #[serde(rename = "PVPChallengeTypeCategory_DAILY")]
    pub pvp_challenge_type_category_daily: Box<models::ConclaveModesPvpmodeAll>,
    #[serde(rename = "PVPChallengeTypeCategory_WEEKLY")]
    pub pvp_challenge_type_category_weekly: Box<models::ConclaveModesPvpmodeAll>,
    #[serde(rename = "PVPChallengeTypeCategory_WEEKLY_ROOT")]
    pub pvp_challenge_type_category_weekly_root: Box<models::ConclaveModesPvpmodeAll>,
    #[serde(rename = "PVPChallengeTypeCategory_MODEAFFECTOR")]
    pub pvp_challenge_type_category_modeaffector: Box<models::ConclaveModesPvpmodeAll>,
}

impl ConclaveCategories {
    pub fn new(pvp_challenge_type_category_daily_root: models::ConclaveModesPvpmodeAll, pvp_challenge_type_category_daily: models::ConclaveModesPvpmodeAll, pvp_challenge_type_category_weekly: models::ConclaveModesPvpmodeAll, pvp_challenge_type_category_weekly_root: models::ConclaveModesPvpmodeAll, pvp_challenge_type_category_modeaffector: models::ConclaveModesPvpmodeAll) -> ConclaveCategories {
        ConclaveCategories {
            pvp_challenge_type_category_daily_root: Box::new(pvp_challenge_type_category_daily_root),
            pvp_challenge_type_category_daily: Box::new(pvp_challenge_type_category_daily),
            pvp_challenge_type_category_weekly: Box::new(pvp_challenge_type_category_weekly),
            pvp_challenge_type_category_weekly_root: Box::new(pvp_challenge_type_category_weekly_root),
            pvp_challenge_type_category_modeaffector: Box::new(pvp_challenge_type_category_modeaffector),
        }
    }
}

