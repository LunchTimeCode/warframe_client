/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InvasionAllOfDefenderReward {
    /// Items that have a quantity attached
    #[serde(rename = "countedItems")]
    pub counted_items: Vec<models::RewardCountedItemsInner>,
    /// thumbnail URL
    #[serde(rename = "thumbnail")]
    pub thumbnail: String,
    /// RGB value as an int assigned to this reward
    #[serde(rename = "color")]
    pub color: f64,
    /// Amount of credits awarded
    #[serde(rename = "credits")]
    pub credits: i32,
    /// string representation of the reward
    #[serde(rename = "asString")]
    pub as_string: String,
    /// Items' names possible to be won
    #[serde(rename = "items")]
    pub items: Vec<String>,
    /// formatted string describing all included items
    #[serde(rename = "itemString")]
    pub item_string: String,
}

impl InvasionAllOfDefenderReward {
    pub fn new(counted_items: Vec<models::RewardCountedItemsInner>, thumbnail: String, color: f64, credits: i32, as_string: String, items: Vec<String>, item_string: String) -> InvasionAllOfDefenderReward {
        InvasionAllOfDefenderReward {
            counted_items,
            thumbnail,
            color,
            credits,
            as_string,
            items,
            item_string,
        }
    }
}

