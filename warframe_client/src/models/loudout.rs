/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Loudout {
    #[serde(rename = "weaponSkins", skip_serializing_if = "Option::is_none")]
    pub weapon_skins: Option<Vec<models::ConfigsInnerSkinsInner>>,
    #[serde(rename = "suits", skip_serializing_if = "Option::is_none")]
    pub suits: Option<Vec<models::SuitInner>>,
    #[serde(rename = "secondary", skip_serializing_if = "Option::is_none")]
    pub secondary: Option<Vec<models::LoudoutSecondaryInner>>,
    #[serde(rename = "primary", skip_serializing_if = "Option::is_none")]
    pub primary: Option<Vec<models::LoudoutSecondaryInner>>,
    #[serde(rename = "melee", skip_serializing_if = "Option::is_none")]
    pub melee: Option<Vec<models::LoudoutMeleeInner>>,
    #[serde(rename = "xpInfo", skip_serializing_if = "Option::is_none")]
    pub xp_info: Option<Vec<models::LoudoutXpInfoInner>>,
}

impl Loudout {
    pub fn new() -> Loudout {
        Loudout {
            weapon_skins: None,
            suits: None,
            secondary: None,
            primary: None,
            melee: None,
            xp_info: None,
        }
    }
}

