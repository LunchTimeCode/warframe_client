/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GlobalUpgradesInner {
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<String>,
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<String>,
    #[serde(rename = "upgrade", skip_serializing_if = "Option::is_none")]
    pub upgrade: Option<String>,
    /// Operation descriptor
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<String>,
    /// Symbol corresponding to operation
    #[serde(rename = "operationSymbol", skip_serializing_if = "Option::is_none")]
    pub operation_symbol: Option<String>,
    /// Value corresponding to performing the operation
    #[serde(rename = "upgradeOperationValue", skip_serializing_if = "Option::is_none")]
    pub upgrade_operation_value: Option<f64>,
    /// Formatted short string designating when the upgrade will expire.
    #[serde(rename = "eta", skip_serializing_if = "Option::is_none")]
    pub eta: Option<String>,
    /// Plain text description of the global upgrade.
    #[serde(rename = "desc", skip_serializing_if = "Option::is_none")]
    pub desc: Option<String>,
}

impl GlobalUpgradesInner {
    pub fn new() -> GlobalUpgradesInner {
        GlobalUpgradesInner {
            start: None,
            end: None,
            upgrade: None,
            operation: None,
            operation_symbol: None,
            upgrade_operation_value: None,
            eta: None,
            desc: None,
        }
    }
}

