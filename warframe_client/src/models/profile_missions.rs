/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileMissions {
    #[serde(rename = "node", skip_serializing_if = "Option::is_none")]
    pub node: Option<String>,
    #[serde(rename = "nodeKey", skip_serializing_if = "Option::is_none")]
    pub node_key: Option<String>,
    #[serde(rename = "missionType", skip_serializing_if = "Option::is_none")]
    pub mission_type: Option<String>,
    #[serde(rename = "faction", skip_serializing_if = "Option::is_none")]
    pub faction: Option<String>,
}

impl ProfileMissions {
    pub fn new() -> ProfileMissions {
        ProfileMissions {
            node: None,
            node_key: None,
            mission_type: None,
            faction: None,
        }
    }
}

