/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SortieData : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SortieData {
    #[serde(rename = "modifierTypes")]
    pub modifier_types: Box<models::SortieDataModifierTypes>,
    #[serde(rename = "modifierDescriptions")]
    pub modifier_descriptions: Box<models::SortieDataModifierTypes>,
    #[serde(rename = "bosses")]
    pub bosses: Box<models::SortieDataBosses>,
    #[serde(rename = "endStates")]
    pub end_states: Vec<models::SortieDataEndStatesInner>,
    #[serde(rename = "modifiers")]
    pub modifiers: Vec<String>,
}

impl SortieData {
    /// 
    pub fn new(modifier_types: models::SortieDataModifierTypes, modifier_descriptions: models::SortieDataModifierTypes, bosses: models::SortieDataBosses, end_states: Vec<models::SortieDataEndStatesInner>, modifiers: Vec<String>) -> SortieData {
        SortieData {
            modifier_types: Box::new(modifier_types),
            modifier_descriptions: Box::new(modifier_descriptions),
            bosses: Box::new(bosses),
            end_states,
            modifiers,
        }
    }
}

