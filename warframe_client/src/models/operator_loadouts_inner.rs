/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OperatorLoadoutsInner {
    #[serde(rename = "skins", skip_serializing_if = "Option::is_none")]
    pub skins: Option<Vec<serde_json::Value>>,
    #[serde(rename = "operatorAmp", skip_serializing_if = "Option::is_none")]
    pub operator_amp: Option<String>,
    #[serde(rename = "upgrades", skip_serializing_if = "Option::is_none")]
    pub upgrades: Option<Vec<String>>,
    #[serde(rename = "abilityOverride", skip_serializing_if = "Option::is_none")]
    pub ability_override: Option<Box<models::OperatorLoadoutsInnerAbilityOverride>>,
    #[serde(rename = "primaryColor", skip_serializing_if = "Option::is_none")]
    pub primary_color: Option<Box<models::ProfileColor>>,
    #[serde(rename = "sigilColor", skip_serializing_if = "Option::is_none")]
    pub sigil_color: Option<Box<models::ProfileColor>>,
    #[serde(rename = "eyeColor", skip_serializing_if = "Option::is_none")]
    pub eye_color: Option<Box<models::ProfileColor>>,
    #[serde(rename = "facial", skip_serializing_if = "Option::is_none")]
    pub facial: Option<Box<models::ProfileColor>>,
    #[serde(rename = "cloth", skip_serializing_if = "Option::is_none")]
    pub cloth: Option<Box<models::ProfileColor>>,
}

impl OperatorLoadoutsInner {
    pub fn new() -> OperatorLoadoutsInner {
        OperatorLoadoutsInner {
            skins: None,
            operator_amp: None,
            upgrades: None,
            ability_override: None,
            primary_color: None,
            sigil_color: None,
            eye_color: None,
            facial: None,
            cloth: None,
        }
    }
}

