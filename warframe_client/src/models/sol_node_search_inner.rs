/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SolNodeSearchInner {
    #[serde(rename = "nodes")]
    pub nodes: Vec<models::SolNodeSolKey>,
    #[serde(rename = "keys")]
    pub keys: Vec<String>,
}

impl SolNodeSearchInner {
    pub fn new(nodes: Vec<models::SolNodeSolKey>, keys: Vec<String>) -> SolNodeSearchInner {
        SolNodeSearchInner {
            nodes,
            keys,
        }
    }
}

