/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FissureTier {
    #[serde(rename = "Lith")]
    Lith,
    #[serde(rename = "Neo")]
    Neo,
    #[serde(rename = "Meso")]
    Meso,
    #[serde(rename = "Axi")]
    Axi,
    #[serde(rename = "Requiem")]
    Requiem,

}

impl std::fmt::Display for FissureTier {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Lith => write!(f, "Lith"),
            Self::Neo => write!(f, "Neo"),
            Self::Meso => write!(f, "Meso"),
            Self::Axi => write!(f, "Axi"),
            Self::Requiem => write!(f, "Requiem"),
        }
    }
}

impl Default for FissureTier {
    fn default() -> FissureTier {
        Self::Lith
    }
}

