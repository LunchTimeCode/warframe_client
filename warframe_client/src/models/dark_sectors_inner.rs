/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DarkSectorsInner {
    #[serde(rename = "defenderMOTD")]
    pub defender_motd: String,
    #[serde(rename = "deployerName")]
    pub deployer_name: String,
    #[serde(rename = "defenderDeploymentActivation")]
    pub defender_deployment_activation: f64,
    #[serde(rename = "defenderName")]
    pub defender_name: String,
    #[serde(rename = "deployerClan")]
    pub deployer_clan: String,
    #[serde(rename = "isAlliance")]
    pub is_alliance: bool,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "history", skip_serializing_if = "Option::is_none")]
    pub history: Option<Vec<models::DarkSectorHistory>>,
}

impl DarkSectorsInner {
    pub fn new(defender_motd: String, deployer_name: String, defender_deployment_activation: f64, defender_name: String, deployer_clan: String, is_alliance: bool, id: String) -> DarkSectorsInner {
        DarkSectorsInner {
            defender_motd,
            deployer_name,
            defender_deployment_activation,
            defender_name,
            deployer_clan,
            is_alliance,
            id,
            history: None,
        }
    }
}

