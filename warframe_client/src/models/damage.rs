/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Damage {
    #[serde(rename = "impact", skip_serializing_if = "Option::is_none")]
    pub impact: Option<f64>,
    #[serde(rename = "puncture", skip_serializing_if = "Option::is_none")]
    pub puncture: Option<f64>,
    #[serde(rename = "slash", skip_serializing_if = "Option::is_none")]
    pub slash: Option<f64>,
    #[serde(rename = "heat", skip_serializing_if = "Option::is_none")]
    pub heat: Option<f64>,
    #[serde(rename = "cold", skip_serializing_if = "Option::is_none")]
    pub cold: Option<f64>,
    #[serde(rename = "electric", skip_serializing_if = "Option::is_none")]
    pub electric: Option<f64>,
    #[serde(rename = "toxin", skip_serializing_if = "Option::is_none")]
    pub toxin: Option<f64>,
    #[serde(rename = "gas", skip_serializing_if = "Option::is_none")]
    pub gas: Option<f64>,
    #[serde(rename = "viral", skip_serializing_if = "Option::is_none")]
    pub viral: Option<f64>,
    #[serde(rename = "corrosive", skip_serializing_if = "Option::is_none")]
    pub corrosive: Option<f64>,
    #[serde(rename = "blast", skip_serializing_if = "Option::is_none")]
    pub blast: Option<f64>,
    #[serde(rename = "magnetic", skip_serializing_if = "Option::is_none")]
    pub magnetic: Option<f64>,
    #[serde(rename = "radiation", skip_serializing_if = "Option::is_none")]
    pub radiation: Option<f64>,
    #[serde(rename = "true", skip_serializing_if = "Option::is_none")]
    pub r#true: Option<f64>,
    #[serde(rename = "void", skip_serializing_if = "Option::is_none")]
    pub void: Option<f64>,
}

impl Damage {
    pub fn new() -> Damage {
        Damage {
            impact: None,
            puncture: None,
            slash: None,
            heat: None,
            cold: None,
            electric: None,
            toxin: None,
            gas: None,
            viral: None,
            corrosive: None,
            blast: None,
            magnetic: None,
            radiation: None,
            r#true: None,
            void: None,
        }
    }
}

