/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Faction : A Faction in Warframe
/// A Faction in Warframe
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Faction {
    #[serde(rename = "Orokin")]
    Orokin,
    #[serde(rename = "Corrupted")]
    Corrupted,
    #[serde(rename = "Infested")]
    Infested,
    #[serde(rename = "Corpus")]
    Corpus,
    #[serde(rename = "Grineer")]
    Grineer,
    #[serde(rename = "Tenno")]
    Tenno,
    #[serde(rename = "Narmer")]
    Narmer,

}

impl std::fmt::Display for Faction {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Orokin => write!(f, "Orokin"),
            Self::Corrupted => write!(f, "Corrupted"),
            Self::Infested => write!(f, "Infested"),
            Self::Corpus => write!(f, "Corpus"),
            Self::Grineer => write!(f, "Grineer"),
            Self::Tenno => write!(f, "Tenno"),
            Self::Narmer => write!(f, "Narmer"),
        }
    }
}

impl Default for Faction {
    fn default() -> Faction {
        Self::Orokin
    }
}

