/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MissionType : A Warframe mision type, the kind of game mode that the mission/node houses.
/// A Warframe mision type, the kind of game mode that the mission/node houses.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MissionType {
    #[serde(rename = "Ancient Retribution")]
    AncientRetribution,
    #[serde(rename = "Arena")]
    Arena,
    #[serde(rename = "Assassination")]
    Assassination,
    #[serde(rename = "Assault")]
    Assault,
    #[serde(rename = "Capture")]
    Capture,
    #[serde(rename = "Conclave")]
    Conclave,
    #[serde(rename = "Dark Sector Defection")]
    DarkSectorDefection,
    #[serde(rename = "Dark Sector Defense")]
    DarkSectorDefense,
    #[serde(rename = "Dark Sector Disruption")]
    DarkSectorDisruption,
    #[serde(rename = "Dark Sector Excavation")]
    DarkSectorExcavation,
    #[serde(rename = "Dark Sector Sabotage")]
    DarkSectorSabotage,
    #[serde(rename = "Dark Sector Survival")]
    DarkSectorSurvival,
    #[serde(rename = "Defense")]
    Defense,
    #[serde(rename = "Disruption")]
    Disruption,
    #[serde(rename = "Excavation")]
    Excavation,
    #[serde(rename = "Extermination (Archwing)")]
    ExterminationLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Extermination")]
    Extermination,
    #[serde(rename = "Free Roam")]
    FreeRoam,
    #[serde(rename = "Hijack")]
    Hijack,
    #[serde(rename = "Hive")]
    Hive,
    #[serde(rename = "Hive Sabotage")]
    HiveSabotage,
    #[serde(rename = "Interception")]
    Interception,
    #[serde(rename = "Interception (Archwing)")]
    InterceptionLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Mobile Defense")]
    MobileDefense,
    #[serde(rename = "Mobile Defense (Archwing)")]
    MobileDefenseLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Orokin Sabotage")]
    OrokinSabotage,
    #[serde(rename = "Orphix")]
    Orphix,
    #[serde(rename = "Pursuit (Archwing)")]
    PursuitLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Relay")]
    Relay,
    #[serde(rename = "Rescue")]
    Rescue,
    #[serde(rename = "Rush (Archwing)")]
    RushLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Sabotage")]
    Sabotage,
    #[serde(rename = "Sabotage (Archwing)")]
    SabotageLeftParenthesisArchwingRightParenthesis,
    #[serde(rename = "Skirmish")]
    Skirmish,
    #[serde(rename = "Spy")]
    Spy,
    #[serde(rename = "Survival")]
    Survival,
    #[serde(rename = "Volatile")]
    Volatile,

}

impl std::fmt::Display for MissionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AncientRetribution => write!(f, "Ancient Retribution"),
            Self::Arena => write!(f, "Arena"),
            Self::Assassination => write!(f, "Assassination"),
            Self::Assault => write!(f, "Assault"),
            Self::Capture => write!(f, "Capture"),
            Self::Conclave => write!(f, "Conclave"),
            Self::DarkSectorDefection => write!(f, "Dark Sector Defection"),
            Self::DarkSectorDefense => write!(f, "Dark Sector Defense"),
            Self::DarkSectorDisruption => write!(f, "Dark Sector Disruption"),
            Self::DarkSectorExcavation => write!(f, "Dark Sector Excavation"),
            Self::DarkSectorSabotage => write!(f, "Dark Sector Sabotage"),
            Self::DarkSectorSurvival => write!(f, "Dark Sector Survival"),
            Self::Defense => write!(f, "Defense"),
            Self::Disruption => write!(f, "Disruption"),
            Self::Excavation => write!(f, "Excavation"),
            Self::ExterminationLeftParenthesisArchwingRightParenthesis => write!(f, "Extermination (Archwing)"),
            Self::Extermination => write!(f, "Extermination"),
            Self::FreeRoam => write!(f, "Free Roam"),
            Self::Hijack => write!(f, "Hijack"),
            Self::Hive => write!(f, "Hive"),
            Self::HiveSabotage => write!(f, "Hive Sabotage"),
            Self::Interception => write!(f, "Interception"),
            Self::InterceptionLeftParenthesisArchwingRightParenthesis => write!(f, "Interception (Archwing)"),
            Self::MobileDefense => write!(f, "Mobile Defense"),
            Self::MobileDefenseLeftParenthesisArchwingRightParenthesis => write!(f, "Mobile Defense (Archwing)"),
            Self::OrokinSabotage => write!(f, "Orokin Sabotage"),
            Self::Orphix => write!(f, "Orphix"),
            Self::PursuitLeftParenthesisArchwingRightParenthesis => write!(f, "Pursuit (Archwing)"),
            Self::Relay => write!(f, "Relay"),
            Self::Rescue => write!(f, "Rescue"),
            Self::RushLeftParenthesisArchwingRightParenthesis => write!(f, "Rush (Archwing)"),
            Self::Sabotage => write!(f, "Sabotage"),
            Self::SabotageLeftParenthesisArchwingRightParenthesis => write!(f, "Sabotage (Archwing)"),
            Self::Skirmish => write!(f, "Skirmish"),
            Self::Spy => write!(f, "Spy"),
            Self::Survival => write!(f, "Survival"),
            Self::Volatile => write!(f, "Volatile"),
        }
    }
}

impl Default for MissionType {
    fn default() -> MissionType {
        Self::AncientRetribution
    }
}

